import javax.naming.ldap.PagedResultsControl;
import javax.swing.*;
import java.io.UTFDataFormatException;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Update_User extends javax.swing.JFrame {
    private String emailpattren = "^[A-Za-z0-9+_.-]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    private String mobileNumberPattern = "^[0-9]*$";
    private String namepattren = "^[a-zA-Z\\s]+";
    private String usernamepattern = "^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,18}[a-zA-Z0-9]$";

    /**
     * Creates new form Update_User
     */
    public Update_User() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        username_tf = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        name_tf = new javax.swing.JTextField();
        email_tf = new javax.swing.JTextField();
        number_tf = new javax.swing.JTextField();
        date_tf = new com.toedter.calendar.JDateChooser();
        userrole_box = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setText("Update User");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("User Role");

        jLabel4.setText("Name");

        jLabel5.setText("Date Of Birth");

        jLabel6.setText("Email");

        jLabel7.setText("Mobile Number");

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        userrole_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pharmacy Manager", "Sales Person" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(295, 295, 295))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator1)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(40, 40, 40)
                                                .addComponent(username_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(41, 41, 41)
                                                .addComponent(jButton2))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(userrole_box, javax.swing.GroupLayout.Alignment.LEADING, 0, 210, Short.MAX_VALUE)
                                                .addComponent(date_tf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(number_tf, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(email_tf, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(name_tf, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addContainerGap(213, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(username_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(userrole_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(name_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(42, 42, 42)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel6)
                                                        .addComponent(email_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel7)
                                                        .addComponent(number_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton3))
                                        .addComponent(date_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        this.dispose();
        new AdminDashboard().setVisible(true);
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int checkUE = 0;
        String username = username_tf.getText();
        if(username.equals("")){
            JOptionPane.showMessageDialog(null,"Username Field is Required");
        }else {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            try{
                MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

// Accessing the database
                MongoDatabase database = mongoClient.getDatabase("Pharmacy");

// Accessing the collection
                MongoCollection<Document> collection = database.getCollection("sys_user");

// Creating a query filter
                Document query = new Document("username", username);

// Executing the query
                MongoCursor<Document> cursor = collection.find(query).iterator();
                if (cursor.hasNext()) {
                    Document document = cursor.next();
                    // Process the document as needed
                    // For example:
                    username_tf.setEditable(false);
                    checkUE = 1;
                    name_tf.setText(document.getString("name"));
                    number_tf.setText(document.getString("mobilenumber"));
                    email_tf.setText(document.getString("email"));
                    String dob = document.getString("DOB");
                    if (!dob.isEmpty()) {
                        try {
                            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dob);
                            date_tf.setDate(date);
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                    if (document.getString("userrole").equals("Pharmacy Manager")) {
                        userrole_box.removeAllItems();
                        userrole_box.addItem("Pharmacy Manager");
                        userrole_box.addItem("Sales Person");
                    } else {
                        userrole_box.removeAllItems();
                        userrole_box.addItem("Sales Person");
                        userrole_box.addItem("Pharmacy Manager");
                    }
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
            if (checkUE == 0){
                JOptionPane.showMessageDialog(null,"Username does not Exist");
            }
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String userRole = (String) userrole_box.getSelectedItem();
        String name = name_tf.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date date = date_tf.getDate();
        String dob ="";
        if(date!= null){
            dob = dateFormat.format(date_tf.getDate());
        }
        String mobilenumber =number_tf.getText();
        String email = email_tf.getText();
        String username = username_tf.getText();

        if(name.equals("")){
            JOptionPane.showMessageDialog(null,"Name Field is Required");
        }else if (!name.matches(namepattren)){
            JOptionPane.showMessageDialog(null,"Enter a Valid name");
        } else if (mobilenumber.equals("")) {
            JOptionPane.showMessageDialog(null,"Mobile Number Field is Required");
        } else if (!mobilenumber.matches(mobileNumberPattern) || mobilenumber.length() !=11) {
            JOptionPane.showMessageDialog(null,"Mobile Number Field is Invalid");
        } else if (email.equals("")) {
            JOptionPane.showMessageDialog(null,"Email Field is Required");
        } else if (!email.matches(emailpattren)) {
            JOptionPane.showMessageDialog(null,"Email Field is Invalid");
        } else if (username.equals("")) {
            JOptionPane.showMessageDialog(null,"Username Field is Required");
        } else if (!username.matches(usernamepattern) ) {
            JOptionPane.showMessageDialog(null,"Username Field is Invalid");
        }else{
            try{
                MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");

// Accessing the database
                MongoDatabase database = mongoClient.getDatabase("Pharmacy");

// Accessing the collection
                MongoCollection<Document> collection = database.getCollection("sys_user");

// Creating a query filter
                Document query = new Document("username", username);

// Creating an update document
                Document update = new Document("$set", new Document("userrole", userRole)
                        .append("name", name)
                        .append("DOB", dob)
                        .append("mobilenumber", mobilenumber)
                        .append("email", email));

// Updating the document in the collection
                collection.updateOne(query, update);

// Closing the MongoDB client connection
                mongoClient.close();

                JOptionPane.showMessageDialog(null, "User Updated Successfully");
                setVisible(false);
                new Update_User().setVisible(true);
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,e);
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update_User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private com.toedter.calendar.JDateChooser date_tf;
    private javax.swing.JTextField email_tf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField name_tf;
    private javax.swing.JTextField number_tf;
    private javax.swing.JTextField username_tf;
    private javax.swing.JComboBox<String> userrole_box;
    // End of variables declaration
}
